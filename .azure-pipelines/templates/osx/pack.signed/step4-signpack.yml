parameters:
- name: osxRuntime
  type: string
  default: osx-x64

steps:
  - task: NuGetAuthenticate@0
    displayName: Authenticate to MicroBuild NuGet feed
    inputs:
      nuGetServiceConnections: 'MicroBuild Toolset Nuget Feed (Read)'

  - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@3
    displayName: Install signing plugin
    inputs:
      signType: '$(SignType)'

  - task: DownloadPipelineArtifact@1
    displayName: Download unsigned package
    inputs:
      buildType: 'current'
      artifactName: 'tmp.${{ parameters.osxRuntime }}.installer_unsigned'
      downloadPath: '$(Build.StagingDirectory)\${{ parameters.osxRuntime }}\pkg'

  - powershell: |
      $dir="$(Build.StagingDirectory)\${{ parameters.osxRuntime }}\pkg"
      Compress-Archive -Path $dir\*.pkg $dir\gcmcorepkg.zip
      Remove-Item $dir\*.pkg
    displayName: 'Zip package file for signing'

  - task: ms-vseng.MicroBuildTasks.7973a23b-33e3-4b00-a7d9-c06d90f8297f.MicroBuildSignMacFiles@1
    displayName: Sign package
    inputs:
      SigningTarget: '$(Build.StagingDirectory)\${{ parameters.osxRuntime }}\pkg\gcmcorepkg.zip'
      SigningCert: 8003
    condition: and(succeeded(), ne(variables['SignType'], 'test'))

  - powershell: |
      $dir="$(Build.StagingDirectory)\${{ parameters.osxRuntime }}\pkg"
      Expand-Archive -LiteralPath $dir\gcmcorepkg.zip -DestinationPath $dir -Force
      Remove-Item $dir\gcmcorepkg.zip -Force
    displayName: 'Unzip signed package file'

  - task: PublishPipelineArtifact@0
    displayName: Upload signed installer
    inputs:
      artifactName: 'tmp.${{ parameters.osxRuntime }}.installer_signed'
      targetPath: '$(Build.StagingDirectory)\${{ parameters.osxRuntime }}\pkg'
